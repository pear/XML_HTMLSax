<?php
/***
 * $Id$
 * Shows the impact of XML_OPTION_FULL_ESCAPES when parsing Word documents
 * saved as HTML
 */
require_once('XML/HTMLSax.php');

// Instantiate the parser
$parser=& new XML_HTMLSax();

if ( isset($_GET['use_escapes']) ) {
    $parser->set_option('XML_OPTION_FULL_ESCAPES');
}
?>
<h1>Parsing Word Documents</h1>
<p>By default this example throws an error like 
"Warning: strpos(): Offset not contained in string.", when parsing
the HTML file generated by MS Word. This is caused by interesting syntax
like &lt;![endif]--&gt; and &lt;![endif]&gt; that Word puts in the HTML.
To prevent this, you need to tell HTMLSax to return 'full escapes' by setting
the option 'XML_OPTION_FULL_ESCAPES' like;
<pre>
$parser->set_option('XML_OPTION_FULL_ESCAPES');
</pre>
</p>
<p>
    <a href="<?php echo $_SERVER['PHP_SELF']; ?>">View without XML_OPTION_FULL_ESCAPES</a> :
    <a href="<?php echo $_SERVER['PHP_SELF']; ?>?use_escapes=1">View with XML_OPTION_FULL_ESCAPES</a>
</p>
<p>Starting to parse...</p>
<?php
// Parse the document
$parser->parse(file_get_contents('worddoc.htm'));
?>
<p>Parsing completed</p>